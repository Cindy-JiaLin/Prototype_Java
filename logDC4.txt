Improve from DC3

1. Add TypeProduct.java, consider the labels are optional.

2. Modify code in type.TYPE
   all about PRODUCT, UNION and MAPPING has been rewritten.

3. Add ProductDiff.java

4. Parser for TYPE

   paserTYPE method in ParseTYPEresult.java

   1) delete ListOfVars.java, since it actually is List<String>
   2) PRODUCT TYPE 
      label is optional, when there is no label, adding the string “nolabel” to labels.
   3) UNION TYPE
      TYPE is optional, when there is no TYPE, adding the TYPE.UNIT to TYPEs.
   4) Don’t forget consider the “.” between label and TYPE, in particular, when there is any TYPE component without label in PRODUCT, and any label without constructor in UNION.
 
5. Test the parser for TYPEs
   Examples in Appendix in B
   
   ./bin/test_TYPE.sh

   MAPPING still need to be check, example m), n)
6. EBNF mapping_type ::= “Mapping” record_type “=>” record_type
************************************************************************************** 19 Mar 2018
7. Modify the TypeProduct

8. Write TypeUnion

9. Parser for VALUE

   parserVALUE method in ParseVALUEresult.java
   1) Primitive Value
   2) Product Value
   3) Union Value
   4) Rec Value
   5) List

10. String value still has problem.

   EBNF string_value = “””{character}”””

   How can I deal with a string contains some particular symbols, such as
  
   ‘,”,\’,\”,\\,\n,\t,\b,\r

   Since a string_value may mix in other types, how to get the contents between double quotes.??????

11. Found a problem, when running ./bin/test_TYPE.sh

    The MAPPING TYPE, example m)

    How to printout the parentheses surround the MAPPING TYPE?
************************************************************************************** 20 Mar 2018
12. Adding Values

    1) TypeSet
    2) TypeMultiset
    3) TypeMapping
    4) TypeRec

13. Re-write parseVALUE for the above values

14. test_VALUE.sh

    parser for product, rec and mapping need to be check again.

    Any example contains STRING is not working !!! ???

    String parser in a mixed up type value ???

15. parser for product value has been fixed.

    Failed to reduce the length of the code for PRODUCT



    
    
   
    